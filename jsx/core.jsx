/**************************************************************************************************** ADOBE SYSTEMS INCORPORATED* Copyright 2015 Adobe Systems Incorporated* All Rights Reserved.** NOTICE:  Adobe permits you to use, modify, and distribute this file in accordance with the* terms of the Adobe license agreement accompanying it.  If you have received this file from a* source other than Adobe, then your use, modification, or distribution of it requires the prior* written permission of Adobe.***************************************************************************************************/function getMessageFromCore() {	return 'This is the message from getMessageFromCore';}var objCore = {};objCore.getMessage = function () {    return 'message from objCore.getMessage';}function exportFile(type) {	/* 1) get the full file path */	var filePath = app.activeDocument.fullName;	/* 2) split the path to get the extension of the file */	var splitPath = filePath.toString().split('.');	var originalExtension = splitPath[splitPath.length-1];			/* 3) split the path to get the folder path */	var folderPath = filePath.toString().split('/').slice(0,-1).join('/') + '/';	/* 4) sanitize the full path */	var sanitizedFilePath = File(filePath).fsName;	if(originalExtension == "" || originalExtension == type)	{		return sanitizedFilePath.split(".")[0] + "." + type;	}	if (type == "pdf") {	/* 1) Set PDF save options */	pdfSaveOptions = new PDFSaveOptions();	pdfSaveOptions.optimization = true;	/* 2) Use saveAs() to export the PDF document (note that you cannot use exportFile() for a PDF) */	app.activeDocument.saveAs(File(sanitizedFilePath), pdfSaveOptions);} else {	}	if(type==undefined || type =="undefined")		type = originalExtension;	return sanitizedFilePath.split(".")[0] + sanitizedFilePath.split(".")[1] + "." + type;}